{% extends "base.html.twig" %}

{% block title %}Agenda{% endblock %}

{% block stylesheets %}
	{{ encore_entry_link_tags("calendar_css") }}
{% endblock %}

{% block body %}

	<section class="my-0">
		<div class="container pt-4" id="calendar-container">
			{% if support is defined %}
				{% set title = "Rendez-vous" %}
				{% include "app/support/_partials/_nav_support.html.twig" %}
			{% endif %}
			<div class="d-flex flex-row align-items-center justify-content-between ml-1 mb-2">
				<div class="d-flex align-items-center">
					<h2 class="h2 mr-3 mb-0 d-none d-sm-block">Agenda</h2>
					<a class="btn btn-{{ theme_color }} btn-sm shadow mr-2" data-toggle="tooltip" data-placement="bottom" title="Passer en vue liste" 
						href="{% if support is defined %}{{ path('support_rdvs', {'id': support.id}) }}{% else %}{{ path('rdvs') }}{% endif %}">
						<span class="far fa-list-alt"></span>
					</a>
					<button id="js-new-rdv" class="btn btn-{{ theme_color }} btn-sm shadow mr-2" data-toggle="tooltip" data-placement="bottom" 
						title="Ajouter un rendez-vous"><span class="far fa-calendar-plus"></span>
					</button>
				</div>
				<h3 class="h4 text-secondary">
					<span class="d-none d-lg-inline">{{ calendar.getMonthToString|capitalize }}</span>
					<span class="d-inline d-lg-none">{{ calendar.getMonthMinToString|capitalize }}</span>
				</h3>
				<div class="float-right">
					<div class="d-none d-lg-inline-flex">
						<div class="form-group  mr-2">
							<div class="custom-control custom-checkbox custom-checkbox-{{ theme_color }} text-dark pl-0" 
								title="Afficher le calendrier sur toute la largeur">
								<div class="form-check">
									<input type="checkbox" id="full-width" name="full-width" 
										class="custom-control-input checkbox form-check-input">
									<label class="custom-control-label form-check-label" for="full-width">Vue large</label>
								</div>
							</div>
						</div>
						<div class="form-group  mr-2">
							<div class="custom-control custom-checkbox custom-checkbox-{{ theme_color }} text-dark pl-0" 
								title="Afficher les week-end">
								<div class="form-check">
									<input type="checkbox" id="show-weekend" name="show-weekend" 
										class="custom-control-input checkbox form-check-input">
									<label class="custom-control-label form-check-label" for="show-weekend">WE</label>
								</div>
							</div>
						</div>
					</div>
					<a href="{% if support is defined %}{{ path('support_calendar', {'id': support.id}) }}{% else %}{{ path('calendar') }}{% endif %}" 
						class="btn btn-{{ theme_color }} btn-sm mb-1 shadow" data-toggle="tooltip" data-placement="bottom" title="Mois actuel"><!--
						--><span class="fas fa-calendar-day"></span><span class="d-none d-md-inline ml-2">Mois actuel</span></a>
					<a href="{% if support is defined %}{{ path('support_calendar_show', 
						{'id': support.id, 'year': calendar.previousMonth.year, 'month': calendar.previousMonth.month}) }}
						{% else %}{{ path('calendar_show', {'year': calendar.previousMonth.year, 'month': calendar.previousMonth.month}) }}{% endif %}" 
						class="btn btn-{{ theme_color }} btn-sm mb-1 shadow" 
						data-toggle="tooltip" data-placement="bottom" title="Mois précédent"><span class="fas fa-angle-left"></span>
					</a>
					<a href="{% if support is defined %}{{ path('support_calendar_show', 
						{'id': support.id,'year': calendar.nextMonth.year, 'month': calendar.nextMonth.month}) }}
						{% else %}{{ path('calendar_show', {'year': calendar.nextMonth.year, 'month': calendar.nextMonth.month}) }}{% endif %}" 
						class="btn btn-{{ theme_color }} btn-sm mb-1 shadow" 
						data-toggle="tooltip" data-placement="bottom" title="Mois suivant"><span class="fas fa-angle-right"></span>
					</a>
				</div>
			</div>

			{% set start_day = calendar.firstMonday %}

			<div class="calendar-table calendar-{{ calendar.weeks }}weeks">
				<div class="calendar-header text-secondary">
					<div class="calendar-week-number"></div>
					{% for key, day in calendar.daysList %}
						{% if key < 7 %}
							<div class="calendar-header-col week-5days" {% if key >= 5 %}data-weekend="true"{% endif %}>{{ day }}</div>
						{% endif %}
					{% endfor %}
				</div>
				<div class="calendar-body">
					{% set week_number = start_day|date("W") - 1 %}
					{% for week in 0..(calendar.weeks - 1) %}
						{% if week_number >52 %}
							{% set week_number = 1 %}
						{% else %}
							{% set week_number = week_number + 1 %}
						{% endif %}
						<div class="calendar-week-row">
							<div class="calendar-week-number text-secondary">
								<div class="my-auto">{{ week_number }}</div>
							</div>
							{% for key, day in 0..6 %}
								{% if key < 7 %}
									{% set day = start_day|date_modify("+" ~ (day + week * 7) ~ " day") %}
									<div class="calendar-day-block week-5days {{ calendar.withinMonth(day) == false ? 'calendar-other-month' }}
										{{ calendar.isToday(day) ? 'calendar-today' }}" id="{{ day|date("Y-m-d") }}" 
										title="Ajouter un rendez-vous" {% if key >= 5 %}data-weekend="true"{% endif %}>
										<div class="text-dark calendar-day">{{ day|date("d") }}
											{{ calendar.otherMonth(day) }}
										</div>
										{% if day|date("Y-m-d") in rdvs %}
											{% for rdv in rdvs[day|date("Y-m-d")] %}
												<a class="calendar-event bg-{{ theme_color }} text-light" id="rdv-{{ rdv.id }}" 
													data-toggle="tooltip" data-placement="bottom" title="Voir le rendez-vous">
													{{ rdv.start|date("H:i") }} {{ rdv.title }}
												</a>
											{% endfor %}
										{% endif %}
									</div>
								{% endif %}
							{% endfor %}
						</div>
					{% endfor %}
				</div>
			</div>
		</div>
	</section>

	{% include "app/rdv/_rdvModal.html.twig" %}

{% endblock %}

{% block javascripts %}

{#	<script type="text/javascript">#}
{#		// Client ID and API key from the Developer Console#}
{#		var CLIENT_ID = '226888224425-jl18mogr4dpouu479j1vbjq3558e9r6k.apps.googleusercontent.com';#}
{#		var API_KEY = 'AIzaSyBbf4Nc3NGPJ-mHysK2DkbDx-FFn2y5Xz0';#}

{#		// Array of API discovery doc URLs for APIs used by the quickstart#}
{#		var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"];#}
{#		// var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"];#}

{#		// Authorization scopes required by the API; multiple scopes can be#}
{#		// included, separated by spaces.#}
{#		var SCOPES = 'https://www.googleapis.com/auth/calendar';#}

{#		// var authorizeButton = document.getElementById('authorize_button');#}
{#		// var signoutButton = document.getElementById('signout_button');#}

{#		/**#}
{#		 *  On load, called to load the auth2 library and API client library.#}
{#		 */#}
{#		function handleClientLoad() {#}
{#			gapi.load('client:auth2', initClient);#}
{#		}#}

{#		/**#}
{#		 *  Initializes the API client library and sets up sign-in state#}
{#		 *  listeners.#}
{#		 */#}
{#		function initClient() {#}
{#			gapi.client.init({#}
{#				apiKey: API_KEY,#}
{#				clientId: CLIENT_ID,#}
{#				discoveryDocs: DISCOVERY_DOCS,#}
{#				scope: SCOPES#}
{#			}).then(function () {#}
{#				// Listen for sign-in state changes.#}
{#				gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);#}

{#				// Handle the initial sign-in state.#}
{#				updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());#}
{#				authorizeButton.onclick = handleAuthClick;#}
{#				signoutButton.onclick = handleSignoutClick;#}
{#			}, function(error) {#}
{#				appendPre(JSON.stringify(error, null, 2));#}
{#			});#}
{#		}#}

{#		/**#}
{#		 *  Called when the signed in status changes, to update the UI#}
{#		 *  appropriately. After a sign-in, the API is called.#}
{#		 */#}
{#		function updateSigninStatus(isSignedIn) {#}
{#			if (isSignedIn) {#}
{#				authorizeButton.style.display = 'none';#}
{#				signoutButton.style.display = 'block';#}
{#				listUpcomingEvents();#}
{#			} else {#}
{#				authorizeButton.style.display = 'block';#}
{#				signoutButton.style.display = 'none';#}
{#			}#}
{#		}#}

{#		/**#}
{#		 *  Sign in the user upon button click.#}
{#		 */#}
{#		function handleAuthClick(event) {#}
{#			gapi.auth2.getAuthInstance().signIn();#}
{#		}#}

{#		/**#}
{#		 *  Sign out the user upon button click.#}
{#		 */#}
{#		function handleSignoutClick(event) {#}
{#			gapi.auth2.getAuthInstance().signOut();#}
{#		}#}

{#		/**#}
{#		 * Append a pre element to the body containing the given message#}
{#		 * as its text node. Used to display the results of the API call.#}
{#		 *#}
{#		 * @param {string} message Text to be placed in pre element.#}
{#		 */#}
{#		function appendPre(message) {#}
{#			var pre = document.getElementById('content');#}
{#			var textContent = document.createTextNode(message + '\n');#}
{#			pre.appendChild(textContent);#}
{#		}#}

{#		/**#}
{#		 * Print the summary and start datetime/date of the next ten events in#}
{#		 * the authorized user's calendar. If no events are found an#}
{#		 * appropriate message is printed.#}
{#		 */#}
{#		function listUpcomingEvents() {#}
{#			gapi.client.calendar.events.list({#}
{#				'calendarId': 'primary',#}
{#				'timeMin': (new Date()).toISOString(),#}
{#				'showDeleted': false,#}
{#				'singleEvents': true,#}
{#				'maxResults': 10,#}
{#				'orderBy': 'startTime'#}
{#			}).then(function(response) {#}
{#				var events = response.result.items;#}
{#				appendPre('Upcoming events:');#}

{#				if (events.length > 0) {#}
{#					for (i = 0; i < events.length; i++) {#}
{#						var event = events[i];#}
{#						var when = event.start.dateTime;#}
{#						if (!when) {#}
{#							when = event.start.date;#}
{#						}#}
{#						appendPre(event.summary + ' (' + when + ')')#}
{#					}#}
{#				} else {#}
{#					appendPre('No upcoming events found.');#}
{#				}#}
{#			});#}
{#		}#}

{#	</script>#}

{#	<script async defer src="https://apis.google.com/js/api.js"#}
{#			onload="this.onload=function(){};handleClientLoad()"#}
{#			onreadystatechange="if (this.readyState === 'complete') this.onload()">#}
{#	</script>#}
	{{ encore_entry_script_tags("calendar") }}
{% endblock javascripts %}
