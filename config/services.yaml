# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    router.request_context.scheme: "https"
    asset.request_context.secure: true
    documents_directory: "%kernel.project_dir%/public/uploads/documents/"
    downloads_directory: "%kernel.project_dir%/public/downloads/"
    app_env: "%env(APP_ENV)%"
    admin_email: "%env(ADMIN_EMAIL)%"
    maintenance: false

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $adminEmail: "%admin_email%"
            $appEnv: "%app_env%"
            $documentsDirectory: "%documents_directory%"
            $downloadsDirectory: "%downloads_directory%"

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: "../src/*"
        exclude: "../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}"

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: "../src/Controller"
        tags: ["controller.service_arguments"]

    App\DataFixtures\Processor\UserProcessor:
        tags: [{ name: fidry_alice_data_fixtures.processor }]
        arguments:
            - "@security.user_password_hasher"

    App\EventListener\ExceptionListener:
        tags:
            - { name: "kernel.event_listener", event: "kernel.exception" }
        arguments:
            $exceptionListener: "%env(EXCEPTION_LISTENER)%"

    # App\EventSubscriber\ExceptionSubscriber:
    #     arguments:
    #         $exceptionListener: '%env(EXCEPTION_LISTENER)%'

    App\EventListener\LoginListener:
        tags:
            - {
                  name: "kernel.event_listener",
                  event: "security.interactive_login",
              }

    App\EventListener\MaintenanceListener:
        tags:
            - {
                  name: "kernel.event_listener",
                  event: "kernel.request",
                  method: "onKernelRequest",
              }
        arguments:
            $maintenance: '%env(default:maintenance:MAINTENANCE)%' 

    App\EventListener\TerminateListener:
        tags:
            - { name: "kernel.event_listener", event: "kernel.terminate" }

    App\Service\DatabaseDumper:
        arguments:
            $databaseName: "%env(DB_DATABASE_NAME)%"
            $userName: "%env(DB_USERNAME)%"
            $password: "%env(DB_PASSWORD)%"
            $host: "%env(DB_HOST)%"

    App\Service\File\ImageOptimizer:
        arguments:
            $tinifyKey: "%env(TINIFY_KEY)%"

    App\Service\SiSiao\SiSiaoClient:
        arguments:
            $url: "%env(SISIAO_URL)%"

    App\Service\SiSiao\SiSiaoGroupImporter:
        arguments:
            $url: "%env(SISIAO_URL)%"

    App\Service\SiSiao\SiSiaoEvaluationImporter:
        arguments:
            $url: "%env(SISIAO_URL)%"

    App\Service\SiSiao\SiSiaoGlossary:
        arguments:
            $url: "%env(SISIAO_URL)%"

    App\Service\Api\OutlookApi\OutlookCalendarApiService:
        arguments:
            $outlookClientSecret: "%env(OUTLOOK_CLIENT_SECRET)%"
            $outlookClientId: "%env(OUTLOOK_CLIENT_ID)%"

    App\Service\Api\GoogleApi\GoogleCalendarApiService:
        arguments:
            $googleClientSecret: "%env(GOOGLE_CLIENT_SECRET)%"
            $googleClientId: "%env(GOOGLE_CLIENT_ID)%"
            $googleProjectId: "%env(GOOGLE_PROJECT_ID)%"

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Tinify\Tinify: ~
    Tinify\Source: ~
