security:
    password_hashers:
        App\Entity\Organization\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: null }
        app_user_provider:
            entity:
                class: App\Entity\Organization\User
                property: username

    enable_authenticator_manager: true

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            provider: app_user_provider
            custom_authenticator: App\Security\AppAuthenticator
            user_checker: App\Security\BadPasswordUserChecker

            # allow authentication using a form or HTTP basic
            form_login: ~
            http_basic: ~

            # configure the form authentication as the entry point for unauthenticated users
            entry_point: form_login

            logout:
                path: security_logout
                target: security_login

            # remember_me:
            #     secret: "%kernel.secret%"
            #     lifetime: 604800
            #     path: /
            #     always_remember_me: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication
            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/, roles: ROLE_USER }

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
